<% params_name =  "#{@name.underscore}_params" -%>
<% hash_name   =  "#{@name.underscore}_hash" -%>
<% create_model_method  =  "create_#{@name.underscore}" -%>
require "./spec_helper"

def <%= hash_name %>
  <%- if @fields_hash.empty? -%>
  {} of String => String
  <%- else -%>
  <%= @fields_hash.to_s %>
  <%- end -%>
end

def <%= params_name %>
  params = [] of String
  <%- @fields_hash.keys.map do |k| -%>
  params << "<%= k %>=#{<%= hash_name %>["<%= k %>"]}"
  <%- end -%>
  params.join("&")
end

def <%= create_model_method %>
  model = <%= class_name %>.new(<%= hash_name %>)
  model.save
  model
end

class <%= class_name %>ControllerTest < GarnetSpec::Controller::Test
  getter handler : Amber::Pipe::Pipeline

  def initialize
    @handler = Amber::Pipe::Pipeline.new
    @handler.build :api do
      plug Amber::Pipe::Error.new
      plug Amber::Pipe::Session.new
    end
    @handler.prepare_pipelines
  end
end

describe <%= class_name %>ControllerTest do
  subject = <%= class_name %>ControllerTest.new

  it "renders <%= @name %> index json" do
    <%= class_name %>.clear
    model = create_<%= @name.downcase %>
    response = subject.get "/<%= name_plural %>"

    response.status_code.should eq(200)
    <%- unless @fields_hash.empty? -%>
    response.body.should contain("Fake")
    <%- end -%>
  end

  it "renders <%= @name %> show json" do
    <%= class_name %>.clear
    model = create_<%= @name.downcase %>
    location = "/<%= name_plural %>/#{model.id}"

    response = subject.get location

    response.status_code.should eq(200)
    <%- unless @fields_hash.empty? -%>
    response.body.should contain("Fake")
    <%- end -%>
  end

  it "creates a <%= @name %>" do
    <%= class_name %>.clear
    response = subject.post "/<%= name_plural %>", body: <%= params_name %>

    response.status_code.should eq(201)
    <%- unless @fields_hash.empty? -%>
    response.body.should contain "Fake"
    <%- end -%>
  end

  it "updates a <%= @name %>" do
    <%= class_name %>.clear
    model = <%= create_model_method %>
    response = subject.patch "/<%= name_plural %>/#{model.id}", body: <%= params_name %>

    response.status_code.should eq(200)
    <%- unless @fields_hash.empty? -%>
    response.body.should contain "Fake"
    <%- end -%>
  end

  it "deletes a <%= @name %>" do
    <%= class_name %>.clear
    model = <%= create_model_method %>
    response = subject.delete "/<%= name_plural %>/#{model.id}"

    response.status_code.should eq(204)
  end
end
